// <auto-generated />
using System;
using EmployeeService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmployeeService.Data.Migrations
{
    [DbContext(typeof(EmployeeContext))]
    partial class EmployeeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmployeeService.Data.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("EmploymentTypeId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmploymentTypeId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2011, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "holmes@detectives.org",
                            EmploymentTypeId = 1,
                            FirstName = "Sherlock",
                            LastName = "Holmes",
                            ModifiedOn = new DateTime(2011, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2013, 11, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "marple@detectives.org",
                            EmploymentTypeId = 2,
                            FirstName = "Jane",
                            LastName = "Marple",
                            ModifiedOn = new DateTime(2013, 11, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2012, 8, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "poirot@detectives.org",
                            EmploymentTypeId = 1,
                            FirstName = "Hercule",
                            LastName = "Poirot",
                            ModifiedOn = new DateTime(2012, 8, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2024, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "drew@detectives.org",
                            EmploymentTypeId = 3,
                            FirstName = "Nancy",
                            LastName = "Drew",
                            ModifiedOn = new DateTime(2024, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2018, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "fletcher@detectives.org",
                            EmploymentTypeId = 2,
                            FirstName = "Jessica",
                            LastName = "Fletcher",
                            ModifiedOn = new DateTime(2018, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            CreatedOn = new DateTime(2016, 9, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "columbo@detectives.org",
                            EmploymentTypeId = 1,
                            FirstName = "Frank",
                            LastName = "Columbo",
                            ModifiedOn = new DateTime(2016, 9, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("EmployeeService.Data.Models.EmploymentType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmploymentTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Permanent"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Freelance"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Intern"
                        });
                });

            modelBuilder.Entity("EmployeeService.Data.Models.Employee", b =>
                {
                    b.HasOne("EmployeeService.Data.Models.EmploymentType", "EmploymentType")
                        .WithMany("Employees")
                        .HasForeignKey("EmploymentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmploymentType");
                });

            modelBuilder.Entity("EmployeeService.Data.Models.EmploymentType", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
